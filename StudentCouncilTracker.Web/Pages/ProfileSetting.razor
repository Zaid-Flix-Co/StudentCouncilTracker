@page "/settings"

<PageHeadTitle Title="Настройки профиля" />

<Loading Spinning="IsLoading">
    @if (User != null)
    {
        <EditForm Model="User.Data" OnSubmit="@Update">
            <div class="row">
                <div class="col-md-8">
                    <FormElement @bind-Control="User.Data.Email" />
                    <FormElement @bind-Control="User.Data.PhoneNumber" />
                    <FormElement @bind-Control="User.Data.Password" />
                </div>
            </div>

            <div class="sticky-bottom">
                <SaveButton Text="Обновить данные" TextSuccess="Успешно" IsLoading="IsLoading" />
                <NavLink href="@("")">
                    <AntDesign.Button Type="@ButtonType.Link">Закрыть</AntDesign.Button>
                </NavLink>
            </div>
        </EditForm>
    }
</Loading>

@code {
    [Inject]
    protected AuthService AuthService { get; set; } = null!;

    [Inject]
    protected CatalogUserService CatalogUserService { get; set; } = null!;

    [Inject]
    protected IJSRuntime JsRuntime { get; set; } = null!;

    [Inject]
    protected NavigationManager NavigationManager { get; set; } = null!;

    [Inject]
    protected MessageService MessageService { get; set; } = null!;

    [Inject]
    protected IUserProvider UserProvider { get; set; } = null!;

    protected CatalogUserDto User { get; set; } = null!;

    private bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await GetUser();
            StateHasChanged();
        }
    }

    private async Task GetUser()
    {
        IsLoading = true;
        StateHasChanged();

        var result = await CatalogUserService.GetCardAsync(UserProvider.UserId);
        if (result.Ok)
            User = result.Value;

        IsLoading = false;
    }

    private async Task Update()
    {
        IsLoading = true;
        StateHasChanged();

        var result = await CatalogUserService.PutCardAsync(User);

        if (result.Ok)
            await MessageService.Success("Данные успешно обновлены");
        else
            await MessageService.Error("Ошибка обновления");

        IsLoading = false;
        StateHasChanged();
    }
}
